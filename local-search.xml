<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>搭建自己的博客</title>
    <link href="/2021/05/15/blog_build/"/>
    <url>/2021/05/15/blog_build/</url>
    
    <content type="html"><![CDATA[<hr><p><em>记录一下自己第一次搭建静态博客的经历</em></p><h6 id="本文不会记录详细的操作过程-只是整理流程与记录心得"><a href="#本文不会记录详细的操作过程-只是整理流程与记录心得" class="headerlink" title="本文不会记录详细的操作过程,只是整理流程与记录心得 ^_^"></a>本文不会记录详细的操作过程,只是整理流程与记录心得 ^_^</h6><hr><span id="more"></span> <h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><hr><ul><li><p>所用主机</p><ul><li>win10</li></ul></li><li><p>所用软件</p><ul><li><p>git </p><ul><li><p>git是什么？</p><p>​        版本控制工具，方便在不同版本进行切换修改，类似文件分不同时间备份让后需要时找回其中一份代替，同时git所带的<code>git bash</code>方便用户在windows下使用git命令的模拟终端（windows自带的cmd功能太弱）linux、unix可以直接使用git。</p></li></ul></li><li><p>node.js(JavaScript 运行环境,)</p></li><li><p>随node.js一同安装的包管理工具npm,使用npm安装的模块hexo</p><ul><li><p>什么是包管理工具？ </p><p>​      也叫包管理器,它允许用户在操作系统上安装、删除、升级、配置和管理软件包。软件包管理器可以是像“软件中心”这样的图形化应用，也可以是像 <a href="https://itsfoss.com/apt-vs-apt-get-difference/">    apt-get</a> 或 <a href="https://itsfoss.com/pacman-command/">pacman</a> 这样的命令行工具,python中的pip即为一种包管理工具。</p></li></ul></li></ul></li></ul><ul><li><p>所借助的平台</p><ul><li><p>github</p><ul><li><p>github是什么？</p><p><del>同性交友网站</del></p><p>利用git进行代码管理的托管平台</p></li><li><p>为什么选择github?</p><p>github有一个很有爱的项目,叫做<code>github pages</code>,这个项目是给开发者建立一个私人页面,所以许多人都拿来搭博客用了,在创建仓库的时候将仓库名名为:用户名.github.io时开启</p><p>即用github pages项目代替了服务器,缺点就是功能不完全,只能控制小部分范围,但这对搭建个人静态博客够用了,用码云gitee同理。</p></li></ul></li></ul><p>​    </p></li></ul><hr><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><hr><p><em>简单来说就是在本地计算机搭建Hexo环境，Hexo通过generate命令将*.md文件渲染成静态的html页面，然后Hexo通过deploy命令触发git用户通过公钥免密登陆服务器(这里的github即作为托管服务器)，进而将静态页面推送到服务器的git仓库（repository）中。然后，服务器再通过钩子（git-hooks） 将静态页面checkout到网站的根目录下，进而实现博客的自动部署。</em></p><hr><h3 id="实际流程"><a href="#实际流程" class="headerlink" title="实际流程"></a>实际流程</h3><hr><ul><li><p>下载git,配置用户信息</p><p>这里需要配置用户名和邮箱,这里的信息并不是起权限验证的作用,这么做的一个目的是为了记录操作过程，就是方便给人看的，如记录某某上传了什么或者干了别的什么。可以随便输入用户名和邮箱但不推荐。</p></li><li><p>将git与github进行ssh key链接</p><ul><li><p><em>为什么这里会有一个小圆圈呢，这是由于我的强迫症和markdown语法冲突产生的….</em></p><ul><li><blockquote><p><em>SSH 为 Secure Shell （安全外壳协议）的缩写，SSH 是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。即可用ssh协议远程登陆主机，这里的远程主机即为github仓库。</em>—摘自《百度百科》</p></blockquote></li><li><blockquote><p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提           交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。—摘自廖雪峰老师网站</p><p>​                                                                                      </p></blockquote></li></ul></li></ul><p>使用git创建ssh密钥，然后将这个密钥添加到github用户的账号中，这样用户即可实现用git免密登录管理gitHubl了</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>值得一提的是生成密钥的命令，常常如下：<br>  <br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的邮箱&quot;</span><br>  <br>  <br>-t 用来指定加密算法为 rsa；<br>-C 后面是个注释信息，并不一定要和你 Git 账户的邮箱或者 Git 账户名保持一致，只是常常是和你账户邮箱保持一致，这样设置，就能知道这个公钥被绑定在哪个 Git 账户上了<br></code></pre></div></td></tr></table></figure></li></ul><ul><li><p>使用hexo搭建博客</p><p>通过在git bash 中使用一些hexo命令。即可实现博客的搭建与上传。</p><p>hexo的工作流程：</p><ul><li><p>hexo  init  文件名 ：</p><p>​        创建一个初始化的文件，里面有搭建hexo博客所需的基本文件，后续操作以及关于博客的修改都在这个文件中进行。</p></li><li><p>hexo g：</p><p>​        生成静态文件。将我们的数据和界面相结合生成静态文件的过程。会遍历主题文件中的 <code>source</code> 文件夹（js、css、img 等静态资源），然后建立索引，然后根据索引生成 <code>pubilc</code> 文件夹，此时的 <code>public</code> 文件是由 html、 js、css、img 建立的纯静态文件可以通过 <code>index.html</code> 作为入口访问你的博客。</p></li><li><p>hexo s:</p><p>生成本地预览文件，通过浏览器搜索localhost:4000即可查看生成的静态博客 </p></li><li><p>hexo d：</p><p>部署文件，即将静态博客上传到服务器上。部署主要是根据在 <code>_config.yml</code> 中配置的git仓库，将博客中<code>public</code>文件上传至 github  中。然后再根据上面的 github 提供的 pages 服务呈现出页面。</p><ul><li><p>如果出现本地预览与部署到服务器上不同的情况，按F12发现css效果缺失，这是由于博客的config配置文件中指名一些css的地址只在localhost下是正确的，而指向服务器的仓库时是错误的，解决办法如下</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>在配置文件url那一部分中加入<br><br> root：/<br></code></pre></div></td></tr></table></figure><p><img src="https://gitee.com/manyeggs/drawing-bed-picgo/raw/master/imges/blog_build_illustration.png"></p><p>意思就是叫浏览器从根目录下慢慢找…不是很聪明的办法但很省事</p></li></ul></li></ul><p>​        后续将md类型的文件加入到该文件\source\_posts中即可对博客内容进行修改。具体样式还需要查看博客主题的的设置，默认的博客主题为landscape。</p><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts">整个流程中关于_config.yml配置的配置很关键<br>空格不能少，很坑喔<br><span class="hljs-symbol">deploy:</span> <br><span class="hljs-symbol">    type:</span> git<br><span class="hljs-symbol">    repo:</span> https:<span class="hljs-comment">//github.com/2693993651/2693993651.github.io.git</span><br><span class="hljs-symbol">    branch:</span> main<br>这个配置好之后，即可使用hexo d 命令了<br>另外，因为githu在国内很难访问，hexo的许多命令都可能因不能链接到服务器而失败，需要重试几次。而且，为了有逼格的域名与访问速度还需要去租域名，服务器（或部署gitee）<br></code></pre></div></td></tr></table></figure></li></ul><hr><h3 id="博客的优化"><a href="#博客的优化" class="headerlink" title="博客的优化"></a>博客的优化</h3><hr><ul><li><p>关于文章</p><figure class="highlight haxe"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haxe"><span class="hljs-comment">//建议写文章前先执行以下两条命令</span><br>hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> categories<br>hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> tags<br></code></pre></div></td></tr></table></figure><p>另：可顺便执行hexo new page “about”命令，完善博客的模块结构，以上三条命令执行后博客就会有三个新模块生效了，分别是分类，标签，关于。而执行之前这三个模块是不能启用的,甚至在启用某些主题时页面完全失效。</p><p><img src="https://gitee.com/manyeggs/drawing-bed-picgo/raw/master/imges/illustration01.png"></p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>建议用下条命令生成新文章<br>hexo new 文章名<br><span class="hljs-regexp">//</span>执行后会在_post文件夹下生成一个新的md文件，虽然前文说到之间把新的md文件拖到这个文件夹也许，但还是建议用这个命令生成之后，再对这个文件修改，以下为原因<br></code></pre></div></td></tr></table></figure><p><img src="https://gitee.com/manyeggs/drawing-bed-picgo/raw/master/imges/illustration02.png"></p><p>​            这样生成的文章有标准的开头格式，方便对文章进行规范与整理，还能顺手加个封面</p></li><li><p>关于主题</p><p>需要下载主题并配置，关于博客的优化还需要查阅所选主题的官方文档来进行操作，去goole看看别人是怎么使用这个主题的会有很大帮助。另外要记得搭建博客的初心啊！！写文章就好不需要太花哨</p></li></ul><hr><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><hr><p>万网上注册账号，买一个域名</p><ul><li><p>在万网控制台添加解析记录</p><p>这里的解析记录有两条分别为CNAME和A记录</p><ul><li><p>CNAME</p><p>购买的域名  ——&gt; 用户名.github.io</p></li><li><p>A</p></li></ul></li></ul><ul><li><p>在博客文件夹里的source里添加CNAME文件，里面写上购买的域名</p><p>​    <em>完成之后可在github对应仓库里的设置里查看是否有CNAME文件，网址是否已经保存</em></p></li><li><p>最后重新部署文件</p><figure class="highlight awk"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>即输入以下命令<br><br>hexo clean<br><span class="hljs-regexp">//</span>每次部署前都建议输入这个命令清除缓存文件和已生成的静态文件，以防修改不起作用<br>hexo g<br>hexo s<span class="hljs-regexp">//</span>先本地预览，先查看方便及时修改<br>hexo d<br></code></pre></div></td></tr></table></figure></li></ul><p>成功之后即可实现在浏览器中输入域名访问自己的博客了</p><hr>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>轻量级</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>helloworld!</title>
    <link href="/2021/05/14/helloworld/"/>
    <url>/2021/05/14/helloworld/</url>
    
    <content type="html"><![CDATA[<h1 id="十分是否搜索"><a href="#十分是否搜索" class="headerlink" title="十分是否搜索"></a>十分是否搜索</h1><p>收费的公司</p><p>是粉色粉色给阿迪王</p><p>大王发发生</p><p>阿瓦达沃达丰</p><p>啊打发</p><p>方式vd</p><hr><p>阿迪王啊</p><hr><hr><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit">title: helloworld!<br>date: 2021<span class="hljs-string">-05</span><span class="hljs-string">-14</span> 20:38:07<br><span class="hljs-keyword">tags:</span><br>  - 叭叭叭<br>  - 啦啦啦<br>categories: 实验ada <br></code></pre></div></td></tr></table></figure><p>title: helloworld!<br>date: 2021-05-14 20:38:07<br>tags:</p><ul><li>叭叭叭</li><li>啦啦啦<br>categories: 实验</li></ul><p>-–</p><p>-–</p><p>.&gt;dwa </p><blockquote><p>fa</p><p>awd</p><blockquote><p>adw </p><p>adwa.</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>.</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote>]]></content>
    
    
    <categories>
      
      <category>实验</category>
      
    </categories>
    
    
    <tags>
      
      <tag>叭叭叭</tag>
      
      <tag>啦啦啦</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
